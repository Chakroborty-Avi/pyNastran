import unittest
import numpy as np
from pyNastran.dev.bdf_vectorized3.cards.base_card import searchsorted_filter, searchsorted_filter_


class TestNumpyExtensions(unittest.TestCase):
    def test_searchsorted_filter1(self):
        all_ids = [1, 0]
        lookup_ids = [1]
        with self.assertRaises(RuntimeError):
            searchsorted_filter_(all_ids, lookup_ids)

        all_ids          = [0, 1, 2, 3, 4]
        all_ids_expected = [   1,       4]

        lookup_ids       = [   1,       4, 5]
        ilookup_expected = [   0,       1]
        ilookup, iall = searchsorted_filter_(all_ids, lookup_ids)
        assert np.array_equal(ilookup, ilookup_expected)
        assert np.array_equal(iall, all_ids_expected)

        all_ids          = [1, 2, 3, 4, 5]
        all_ids_expected = [   1,       4]

        lookup_ids       = [   2,       5, 6]
        ilookup_expected = [   0,       1]
        ilookup, iall = searchsorted_filter_(all_ids, lookup_ids)
        assert np.array_equal(ilookup, ilookup_expected)
        assert np.array_equal(iall, all_ids_expected)

    def test_searchsorted_filter2(self):
        all_ids = np.array([2, 20, 30, 300705], dtype='int32')
        v_all = all_ids
        #lookup_ids = [1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704]
        lookup_ids_ = [
            [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[1, 1, 1, 1, 2, 2, 1, 1, 1, 1],
            #[300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704], [300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704],
            #[300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704], [300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704],
            #[300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704], [300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704],
            #[300704, 300704, 300704, 300704, 300705, 300705, 300704, 300704, 300704, 300704]
        ]
        lookup_ids = np.ravel(lookup_ids_)
        all_ids_expected_value = np.where(all_ids == 2)[0]
        ilookup_expected = np.where(lookup_ids == 2)[0]
        all_ids_expected = np.ones(len(ilookup_expected), dtype='int32') * all_ids_expected_value

        ilookup, iall = searchsorted_filter(all_ids, lookup_ids)
        values_all = v_all[iall]
        assert np.array_equal(ilookup, ilookup_expected)
        assert np.array_equal(iall, all_ids_expected)



